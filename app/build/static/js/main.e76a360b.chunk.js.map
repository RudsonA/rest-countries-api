{"version":3,"sources":["functions/theme.js","functions/general.js","components/Header.jsx","components/FlagCard.jsx","pages/Home.jsx","functions/flagsapi.js","components/BackBtn.jsx","components/BorderCountry.jsx","pages/Country.jsx","pages/Region.jsx","App.js","index.js"],"names":["setTheme","themeName","localStorage","setItem","document","getElementById","setAttribute","require","alpha2country","country2alpha","countries","alpha","alphaToCurrency","currencyToAlpha","borderToCountry","countryToBorder","getCountryName","code","toUpperCase","getLanguageNamesStr","codeArr","str","map","i","name","getLanguageName","Header","useState","getItem","theme","className","regions","c","push","region","Set","getRegions","to","id","onClick","FlagCard","props","flag","population","capital","alpha2Code","key","src","toLowerCase","alt","style","fontSize","toLocaleString","Home","flags","setFlags","useEffect","axios","get","then","data","BackBtn","BorderCountry","getNameAlphaFromBorder","Country","useParams","countryInfo","find","country","getCountry","nativeName","subregion","topLevelDomain","currencies","languages","borders","getCurrencyStr","marginBottom","border","Region","filter","App","checkTheme","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e76a360b.chunk.js","sourcesContent":["export function checkTheme() {\n  var theme = localStorage.getItem(\"theme\");\n  if (!theme) {\n    localStorage.setItem(\"theme\", \"light\");\n    document\n      .getElementById(\"theme\")\n      .setAttribute(\"href\", \"/css/light-theme.css\");\n  } else {\n    if (theme === \"light\" || theme === \"dark\") {\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", `/css/${theme}-theme.css`);\n    } else {\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", \"/css/light-theme.css\");\n    }\n  }\n}\n\nexport function setTheme(themeName) {\n  localStorage.setItem(\"theme\", themeName);\n  document\n    .getElementById(\"theme\")\n    .setAttribute(\"href\", `/css/${themeName}-theme.css`);\n}\n\nexport function toggleTheme() {\n  localStorage.getItem(\"theme\") === \"dark\"\n    ? setTheme(\"light\")\n    : setTheme(\"dark\");\n}\n","const {\n  alpha2country,\n  country2alpha\n} = require(\"../json/alphaCodes(CountryNames).json\");\nconst countries = require(\"../json/countries.json\"); // an array\nconst { alpha } = require(\"../json/alphacodes(lang).json\");\nconst { alphaToCurrency, currencyToAlpha } = require(\"../json/currencies.json\");\nconst { borderToCountry, countryToBorder } = require(\"../json/borders.json\");\n\nexport function getNameAlphaFromBorder(code) {\n  const name = borderToCountry[code];\n  const alpha2Code = country2alpha[name];\n  return { name, alpha2Code };\n}\n\nexport function getCountries(region) {\n  return countries.filter((country) => country.region === region);\n}\n\nexport function getCountry(code) {\n  const name = getCountryName(code);\n  return countries.find((country) => country.name === name);\n}\n\nexport function getCountryName(code) {\n  return alpha2country[code.toUpperCase()];\n}\n\nexport function getCurrencyStr(codeArr) {\n  let str = \"\";\n  codeArr.map((code, i) => {\n    if (i === 0) str += code;\n    else str = `, ${code}`;\n  });\n  return str;\n}\n\nexport const getCurrencyName = (code) => alphaToCurrency[code.toUpperCase()];\n\nexport function getCurrencyNamesStr(codeArr) {\n  let str = \"\";\n  codeArr.map((code, i) => {\n    let name = getCurrencyName(code);\n    if (i === 0) {\n      str += name;\n    } else {\n      str += `, ${name}`;\n    }\n  });\n  return str;\n}\n\nexport const getLanguageName = (code) => alpha[code];\n\nexport function getLanguageNamesStr(codeArr) {\n  let str = \"\";\n  codeArr.map((code, i) => {\n    let name = getLanguageName(code);\n    if (i === 0) {\n      str += name;\n    } else {\n      str += `, ${name}`;\n    }\n  });\n  return str;\n}\n\nexport function getRegions() {\n  let regions = [];\n  countries.map((c) => regions.push(c.region));\n  return [...new Set(regions)]; // returns a unique array\n}\n\nexport function getSubRegions(region) {\n  let subRegions = [];\n  let state = countries.filter((c) => c.region === region);\n  state.map((s) => subRegions.push(s.subregion));\n  return [...new Set(subRegions)];\n}\n\nexport function isValidCountryCode(code) {\n  if (alpha2country[code]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toggleTheme } from \"../functions/theme\";\nimport { getRegions } from \"../functions/general\";\n\nexport default function Header() {\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\"));\n  function updateTheme() {\n    toggleTheme();\n    setTheme(localStorage.getItem(\"theme\"));\n  }\n  const renderRegionsList = () =>\n    getRegions().map((region) => {\n      return (\n        <Link to={`/region/${region}`}>\n          {\" \"}\n          <button className=\"btn\">{region}</button>{\" \"}\n        </Link>\n      );\n    });\n\n  return (\n    <header>\n      <div className=\"head-bar\">\n        <div className=\"container\">\n          <h1>Where in the world?</h1>\n          <div className=\"region-list\">{renderRegionsList()}</div>\n          <button id=\"switcher\" onClick={updateTheme}>\n            {theme} Mode\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function FlagCard(props) {\n  const { name, population, region, capital, alpha2Code } = props.flag;\n  return (\n    <div className=\"card\" key={name}>\n      <img\n        src={`/assets/images/flags/${alpha2Code.toLowerCase()}.webp`}\n        alt={`Flag of ${name}`}\n        className=\"card-img-top\"\n      />\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">\n          <strong style={{ fontSize: \"1.25rem\" }}>{name}</strong>\n        </h4>\n        <p className=\"card-text\">Population: {population.toLocaleString()}</p>\n        <p className=\"card-text\">Region: {region}</p>\n        <p className=\"card-text\">Capital: {capital}</p>\n        <p className=\"card-text\">\n          <Link to={`/country/${alpha2Code.toLowerCase()}`}> More Info</Link>{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getFlags } from \"../functions/flagsapi\";\nimport FlagCard from \"../components/FlagCard\";\n\nexport default function Home() {\n  // state\n  const [flags, setFlags] = useState([]);\n\n  useEffect(loadFlags, []);\n\n  function loadFlags() {\n    getFlags().then(({ data }) => setFlags(data));\n  }\n\n  function renderFlagCard(flag) {\n    return <FlagCard flag={flag} />;\n  }\n\n  return (\n    <section id=\"wrapper-container\" className=\"container mt-5\">\n      <div id=\"flag-wrapper\">{flags.map(renderFlagCard)}</div>\n    </section>\n  );\n}\n","import axios from \"axios\";\nconst serverUrl = \"http://localhost:3003/flags\";\n\nexport function getFlags() {\n  return axios.get(serverUrl);\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function BackBtn() {\n  return (\n    <Link to=\"/\">\n      <button id=\"backBtn\" className=\"btn\">\n        Back\n      </button>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getNameAlphaFromBorder } from \"../functions/general\";\n\nexport default function BorderCountry(props) {\n  const { code } = props;\n  const { alpha2Code, name } = getNameAlphaFromBorder(code);\n  return (\n    <div className=\"country-border\">\n      <Link to={`/Country/${alpha2Code}`}>\n        <button className=\"btn border-btn\">{name}</button>\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getCountryName,\n  getCountry,\n  getLanguageNamesStr,\n  getCurrencyStr\n} from \"../functions/general\";\nimport BackBtn from \"../components/BackBtn\";\nimport BorderCountry from \"../components/BorderCountry\";\n\nexport default function Country() {\n  let { id } = useParams();\n  const countryInfo = getCountry(id);\n  let {\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n    currencies,\n    languages,\n    borders\n  } = countryInfo;\n\n  return (\n    <div className=\"container\">\n      <BackBtn />\n      <div id=\"country\">\n        <div className=\"country-image\">\n          <img\n            src={`/assets/images/w702/${id.toLowerCase()}.webp`}\n            alt={`Flag of ${getCountryName(id)}`}\n          />\n        </div>\n        <div className=\"country-info\">\n          <h2>{getCountryName(id)}</h2>\n          <div className=\"country-list\">\n            <ul>\n              <li>\n                <strong>Native Name:</strong> {nativeName}\n              </li>\n              <li>\n                <strong>Population:</strong> {population.toLocaleString()}\n              </li>\n              <li>\n                <strong>Region:</strong> {region}\n              </li>\n              <li>\n                <strong>Sub Region:</strong> {subregion}\n              </li>\n              <li>\n                <strong>Capital:</strong> {capital}\n              </li>\n            </ul>\n            <ul>\n              <li>\n                <strong>Top Level Domain:</strong> {topLevelDomain}{\" \"}\n              </li>\n              <li>\n                <strong>Currencies:</strong> {getCurrencyStr(currencies)}{\" \"}\n              </li>\n              <li>\n                <strong>Languages:</strong> {getLanguageNamesStr(languages)}{\" \"}\n              </li>\n            </ul>\n          </div>\n          <div>\n            <div className=\"country-borders\">\n              <div style={{ marginBottom: \"1em\" }}>Border Countries:</div>\n              {borders.map((border) => (\n                <BorderCountry code={border} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountries } from \"../functions/general\";\nimport BackBtn from \"../components/BackBtn\";\nimport FlagCard from \"../components/FlagCard\";\n\nexport default function Region() {\n  let { id } = useParams();\n  const countries = getCountries(id);\n\n  function renderFlagCard(flag) {\n    return <FlagCard flag={flag} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <BackBtn />\n      <section id=\"wrapper-container\" className=\"container\">\n        <div id=\"flag-wrapper\">{countries.map(renderFlagCard)} </div>\n      </section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { checkTheme } from \"./functions/theme\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Country from \"./pages/Country\";\nimport \"./css/App.css\";\nimport Region from \"./pages/Region\";\n\nfunction App() {\n  checkTheme();\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/region/:id\">\n            <Region />\n          </Route>\n          <Route path=\"/country/:id\">\n            <Country />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}