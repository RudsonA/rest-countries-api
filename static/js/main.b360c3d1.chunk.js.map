{"version":3,"sources":["functions/general.js","functions/theme.js","components/Header.jsx","components/FlagCard.jsx","pages/Home.jsx","functions/flagsapi.js","components/BackBtn.jsx","components/BorderCountry.jsx","pages/Country.jsx","pages/Region.jsx","App.js","index.js"],"names":["require","alpha2country","country2alpha","countries","alpha","borderToCountry","alphaToCurrency","contentRoot","path","root","window","location","hostname","getCountryName","code","toUpperCase","getLanguageNamesStr","codeArr","str","map","i","name","getLanguageName","setTheme","themeName","localStorage","setItem","document","getElementById","setAttribute","Header","useState","getItem","theme","className","regions","c","push","region","Set","getRegions","to","key","id","onClick","FlagCard","props","flag","population","capital","alpha2Code","src","toLowerCase","alt","style","fontSize","toLocaleString","Home","flags","setFlags","useEffect","flagsObj","names","countryName","country","find","fields","length","getFlags","mainFlags","BackBtn","BorderCountry","getNameAlphaFromBorder","Country","useParams","countryInfo","getCountry","nativeName","subregion","topLevelDomain","currencies","languages","borders","getCurrencyStr","marginBottom","border","Region","filter","App","checkTheme","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b360c3d1.chunk.js","sourcesContent":["const {\n  alpha2country,\n  country2alpha\n} = require(\"../json/alphaCodes(CountryNames).json\");\nconst countries = require(\"../json/countries.json\"); // an array\nconst { alpha } = require(\"../json/alphacodes(lang).json\");\nconst { alphaToCurrency } = require(\"../json/currencies.json\");\nconst { borderToCountry } = require(\"../json/borders.json\");\n\nexport function contentRoot(path) {\n  let root = \"/\";\n  if (window.location.hostname === \"raugustin93.github.io\")\n    root = \"/rest-countries-api/\";\n  if (path) return root + path;\n  else return root;\n}\n\nexport function getNameAlphaFromBorder(code) {\n  const name = borderToCountry[code];\n  const alpha2Code = country2alpha[name];\n  return { name, alpha2Code };\n}\n\nexport function getCountries(region) {\n  return countries.filter((country) => country.region === region);\n}\n\nexport function getCountry(code) {\n  const name = getCountryName(code);\n  return countries.find((country) => country.name === name);\n}\n\nexport function getCountryName(code) {\n  return alpha2country[code.toUpperCase()];\n}\n\nexport function getCurrencyStr(codeArr) {\n  let str = \"\";\n  codeArr.map((code, i) => {\n    if (i === 0) str += code;\n    else str = `, ${code}`;\n  });\n  return str;\n}\n\nexport const getCurrencyName = (code) => alphaToCurrency[code.toUpperCase()];\n\nexport function getCurrencyNamesStr(codeArr) {\n  let str = \"\";\n  codeArr.map((code, i) => {\n    let name = getCurrencyName(code);\n    if (i === 0) {\n      str += name;\n    } else {\n      str += `, ${name}`;\n    }\n  });\n  return str;\n}\n\nexport const getLanguageName = (code) => alpha[code];\n\nexport function getLanguageNamesStr(codeArr) {\n  let str = \"\";\n  codeArr.map((code, i) => {\n    let name = getLanguageName(code);\n    if (i === 0) {\n      str += name;\n    } else {\n      str += `, ${name}`;\n    }\n  });\n  return str;\n}\n\nexport function getRegions() {\n  let regions = [];\n  countries.map((c) => regions.push(c.region));\n  return [...new Set(regions)]; // returns a unique array\n}\n\nexport function getSubRegions(region) {\n  let subRegions = [];\n  let state = countries.filter((c) => c.region === region);\n  state.map((s) => subRegions.push(s.subregion));\n  return [...new Set(subRegions)];\n}\n\nexport function isValidCountryCode(code) {\n  if (alpha2country[code]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import { contentRoot } from \"./general\";\n\nexport function checkTheme() {\n  var theme = localStorage.getItem(\"theme\");\n  if (!theme) {\n    localStorage.setItem(\"theme\", \"light\");\n    document\n      .getElementById(\"theme\")\n      .setAttribute(\"href\", contentRoot(\"css/light-theme.css\"));\n  } else {\n    if (theme === \"light\" || theme === \"dark\") {\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", contentRoot(`css/${theme}-theme.css`));\n    } else {\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", contentRoot(\"css/light-theme.css\"));\n    }\n  }\n}\n\nexport function setTheme(themeName) {\n  localStorage.setItem(\"theme\", themeName);\n  document\n    .getElementById(\"theme\")\n    .setAttribute(\"href\", contentRoot(`css/${themeName}-theme.css`));\n}\n\nexport function toggleTheme() {\n  window.localStorage.getItem(\"theme\") === \"dark\"\n    ? setTheme(\"light\")\n    : setTheme(\"dark\");\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toggleTheme } from \"../functions/theme\";\nimport { getRegions, contentRoot } from \"../functions/general\";\n\nexport default function Header() {\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\"));\n  function updateTheme() {\n    toggleTheme();\n    setTheme(localStorage.getItem(\"theme\"));\n  }\n  const renderRegionsList = () =>\n    getRegions().map((region) => {\n      return (\n        <Link to={contentRoot(`region/${region}`)} key={region}>\n          {\" \"}\n          <button className=\"btn\">{region}</button>{\" \"}\n        </Link>\n      );\n    });\n\n  return (\n    <header>\n      <div className=\"head-bar\">\n        <div className=\"container\">\n          <h1>Where in the world?</h1>\n          <div className=\"region-list\">{renderRegionsList()}</div>\n          <button id=\"switcher\" onClick={updateTheme}>\n            {theme} Mode\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { contentRoot } from \"../functions/general\";\n\nexport default function FlagCard(props) {\n  const { name, population, region, capital, alpha2Code } = props.flag;\n  return (\n    <div className=\"card\" key={name}>\n      <img\n        src={contentRoot(\n          `assets/images/flags/${alpha2Code.toLowerCase()}.webp`\n        )}\n        alt={`Flag of ${name}`}\n        className=\"card-img-top\"\n      />\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">\n          <strong style={{ fontSize: \"1.25rem\" }}>{name}</strong>\n        </h4>\n        <p className=\"card-text\">Population: {population.toLocaleString()}</p>\n        <p className=\"card-text\">Region: {region}</p>\n        <p className=\"card-text\">Capital: {capital}</p>\n        <p className=\"card-text\">\n          <Link to={contentRoot(`country/${alpha2Code.toLowerCase()}`)}>\n            {\" \"}\n            More Info\n          </Link>{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getFlags } from \"../functions/flagsapi\";\nimport FlagCard from \"../components/FlagCard\";\n\nexport default function Home() {\n  // state\n  const [flags, setFlags] = useState([]);\n  useEffect(loadFlags, []);\n  const mainFlags = [\n    \"United States\",\n    \"Haiti\",\n    \"Jamaica\",\n    \"Nigeria\",\n    \"Ghana\",\n    \"France\",\n    \"South Africa\",\n    \"Cuba\",\n    \"Ethiopia\",\n    \"Dominican Republic\",\n    \"Canada\",\n    \"Tanzania\"\n  ];\n\n  function loadFlags() {\n    // getFlags().then(({ data }) => setFlags(data));\n    const flagsObj = getFlags(mainFlags);\n    setFlags(flagsObj);\n  }\n\n  function renderFlagCard(flag) {\n    return <FlagCard flag={flag} />;\n  }\n\n  return (\n    <section id=\"wrapper-container\" className=\"container mt-5\">\n      <div id=\"flag-wrapper\">{flags.map(renderFlagCard)}</div>\n    </section>\n  );\n}\n","import axios from \"axios\";\nimport countries from \"../json/countries.json\";\n\nconst serverUrl = \"http://localhost:3003/flags\";\n\n// export function getFlags() {\n//   return axios.get(serverUrl);\n// }\n\nexport function getFlags(names) {\n  const flags = [];\n  for (let i = 0; i < names.length; i++) {\n    const countryName = names[i];\n    const country = countries.find((c) => c.name === countryName);\n    const { name, population, region, capital, alpha2Code } = country;\n    const fields = {\n      name: name,\n      population: population,\n      region: region,\n      capital: capital,\n      alpha2Code: alpha2Code\n    };\n    flags.push(fields);\n  }\n  return flags;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { contentRoot } from \"../functions/general\";\n\nexport default function BackBtn() {\n  return (\n    <Link to={contentRoot()}>\n      <button id=\"backBtn\" className=\"btn\">\n        Back\n      </button>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getNameAlphaFromBorder, contentRoot } from \"../functions/general\";\n\nexport default function BorderCountry(props) {\n  const { code } = props;\n  const { alpha2Code, name } = getNameAlphaFromBorder(code);\n  return (\n    <div className=\"country-border\">\n      <Link to={contentRoot(`Country/${alpha2Code}`)}>\n        <button className=\"btn border-btn\">{name}</button>\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getCountryName,\n  getCountry,\n  getLanguageNamesStr,\n  getCurrencyStr,\n  contentRoot\n} from \"../functions/general\";\nimport BackBtn from \"../components/BackBtn\";\nimport BorderCountry from \"../components/BorderCountry\";\n\nexport default function Country() {\n  let { id } = useParams();\n  const countryInfo = getCountry(id);\n  let {\n    nativeName,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n    currencies,\n    languages,\n    borders\n  } = countryInfo;\n\n  return (\n    <div className=\"container\">\n      <BackBtn />\n      <div id=\"country\">\n        <div className=\"country-image\">\n          <img\n            src={contentRoot(`assets/images/w702/${id.toLowerCase()}.webp`)}\n            alt={`Flag of ${getCountryName(id)}`}\n          />\n        </div>\n        <div className=\"country-info\">\n          <h2>{getCountryName(id)}</h2>\n          <div className=\"country-list\">\n            <ul>\n              <li>\n                <strong>Native Name:</strong> {nativeName}\n              </li>\n              <li>\n                <strong>Population:</strong> {population.toLocaleString()}\n              </li>\n              <li>\n                <strong>Region:</strong> {region}\n              </li>\n              <li>\n                <strong>Sub Region:</strong> {subregion}\n              </li>\n              <li>\n                <strong>Capital:</strong> {capital}\n              </li>\n            </ul>\n            <ul>\n              <li>\n                <strong>Top Level Domain:</strong> {topLevelDomain}{\" \"}\n              </li>\n              <li>\n                <strong>Currencies:</strong> {getCurrencyStr(currencies)}{\" \"}\n              </li>\n              <li>\n                <strong>Languages:</strong> {getLanguageNamesStr(languages)}{\" \"}\n              </li>\n            </ul>\n          </div>\n          <div>\n            <div className=\"country-borders\">\n              <div style={{ marginBottom: \"1em\" }}>Border Countries:</div>\n              {borders.map((border) => (\n                <BorderCountry code={border} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountries } from \"../functions/general\";\nimport BackBtn from \"../components/BackBtn\";\nimport FlagCard from \"../components/FlagCard\";\n\nexport default function Region() {\n  let { id } = useParams();\n  const countries = getCountries(id);\n\n  function renderFlagCard(flag) {\n    return <FlagCard flag={flag} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <BackBtn />\n      <section id=\"wrapper-container\" className=\"container\">\n        <div id=\"flag-wrapper\">{countries.map(renderFlagCard)} </div>\n      </section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { checkTheme } from \"./functions/theme\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Country from \"./pages/Country\";\nimport { contentRoot } from \"./functions/general\";\nimport \"./css/App.css\";\nimport Region from \"./pages/Region\";\n\nfunction App() {\n  checkTheme();\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Route exact path={contentRoot(\"region/:id\")} component={Region} />\n        <Route exact path={contentRoot(\"country/:id\")} component={Country} />\n        <Route exact path={contentRoot()} component={Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}