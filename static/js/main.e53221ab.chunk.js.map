{"version":3,"sources":["functions/general.js","functions/theme.js","components/Header.jsx","components/FlagCard.jsx","pages/Home.jsx","functions/flagsapi.js","components/BackBtn.jsx","components/BorderCountry.jsx","pages/Country.jsx","pages/Region.jsx","App.js","index.js"],"names":["require","alpha2country","country2alpha","countries","alpha","borderToCountry","alphaToCurrency","contentRoot","path","root","window","location","hostname","getCountryName","code","toUpperCase","getLanguageNamesStr","codeArr","str","map","i","name","getLanguageName","setTheme","themeName","localStorage","setItem","document","getElementById","setAttribute","Header","useState","getItem","theme","className","regions","c","push","region","Set","getRegions","to","key","id","onClick","FlagCard","props","flag","population","capital","alpha2Code","src","toLowerCase","alt","style","fontSize","toLocaleString","Home","flags","setFlags","useEffect","axios","get","then","data","BackBtn","BorderCountry","getNameAlphaFromBorder","Country","useParams","countryInfo","find","country","getCountry","nativeName","subregion","topLevelDomain","currencies","languages","borders","getCurrencyStr","marginBottom","border","Region","filter","App","checkTheme","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e53221ab.chunk.js","sourcesContent":["const {\r\n  alpha2country,\r\n  country2alpha\r\n} = require(\"../json/alphaCodes(CountryNames).json\");\r\nconst countries = require(\"../json/countries.json\"); // an array\r\nconst { alpha } = require(\"../json/alphacodes(lang).json\");\r\nconst { alphaToCurrency } = require(\"../json/currencies.json\");\r\nconst { borderToCountry } = require(\"../json/borders.json\");\r\n\r\nexport function contentRoot(path) {\r\n  let root = \"/\";\r\n  if (window.location.hostname === \"rudsona.github.io\")\r\n    root = \"https://rudsona.github.io/rest-countries-api/\";\r\n  if (path) return root + path;\r\n  else return root;\r\n}\r\n\r\nexport function getNameAlphaFromBorder(code) {\r\n  const name = borderToCountry[code];\r\n  const alpha2Code = country2alpha[name];\r\n  return { name, alpha2Code };\r\n}\r\n\r\nexport function getCountries(region) {\r\n  return countries.filter((country) => country.region === region);\r\n}\r\n\r\nexport function getCountry(code) {\r\n  const name = getCountryName(code);\r\n  return countries.find((country) => country.name === name);\r\n}\r\n\r\nexport function getCountryName(code) {\r\n  return alpha2country[code.toUpperCase()];\r\n}\r\n\r\nexport function getCurrencyStr(codeArr) {\r\n  let str = \"\";\r\n  codeArr.map((code, i) => {\r\n    if (i === 0) str += code;\r\n    else str = `, ${code}`;\r\n  });\r\n  return str;\r\n}\r\n\r\nexport const getCurrencyName = (code) => alphaToCurrency[code.toUpperCase()];\r\n\r\nexport function getCurrencyNamesStr(codeArr) {\r\n  let str = \"\";\r\n  codeArr.map((code, i) => {\r\n    let name = getCurrencyName(code);\r\n    if (i === 0) {\r\n      str += name;\r\n    } else {\r\n      str += `, ${name}`;\r\n    }\r\n  });\r\n  return str;\r\n}\r\n\r\nexport const getLanguageName = (code) => alpha[code];\r\n\r\nexport function getLanguageNamesStr(codeArr) {\r\n  let str = \"\";\r\n  codeArr.map((code, i) => {\r\n    let name = getLanguageName(code);\r\n    if (i === 0) {\r\n      str += name;\r\n    } else {\r\n      str += `, ${name}`;\r\n    }\r\n  });\r\n  return str;\r\n}\r\n\r\nexport function getRegions() {\r\n  let regions = [];\r\n  countries.map((c) => regions.push(c.region));\r\n  return [...new Set(regions)]; // returns a unique array\r\n}\r\n\r\nexport function getSubRegions(region) {\r\n  let subRegions = [];\r\n  let state = countries.filter((c) => c.region === region);\r\n  state.map((s) => subRegions.push(s.subregion));\r\n  return [...new Set(subRegions)];\r\n}\r\n\r\nexport function isValidCountryCode(code) {\r\n  if (alpha2country[code]) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { contentRoot } from \"./general\";\r\n\r\nexport function checkTheme() {\r\n  var theme = localStorage.getItem(\"theme\");\r\n  if (!theme) {\r\n    localStorage.setItem(\"theme\", \"light\");\r\n    document\r\n      .getElementById(\"theme\")\r\n      .setAttribute(\"href\", contentRoot(\"css/light-theme.css\"));\r\n  } else {\r\n    if (theme === \"light\" || theme === \"dark\") {\r\n      document\r\n        .getElementById(\"theme\")\r\n        .setAttribute(\"href\", contentRoot(`css/${theme}-theme.css`));\r\n    } else {\r\n      document\r\n        .getElementById(\"theme\")\r\n        .setAttribute(\"href\", contentRoot(\"css/light-theme.css\"));\r\n    }\r\n  }\r\n}\r\n\r\nexport function setTheme(themeName) {\r\n  localStorage.setItem(\"theme\", themeName);\r\n  document\r\n    .getElementById(\"theme\")\r\n    .setAttribute(\"href\", contentRoot(`css/${themeName}-theme.css`));\r\n}\r\n\r\nexport function toggleTheme() {\r\n  window.localStorage.getItem(\"theme\") === \"dark\"\r\n    ? setTheme(\"light\")\r\n    : setTheme(\"dark\");\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toggleTheme } from \"../functions/theme\";\r\nimport { getRegions, contentRoot } from \"../functions/general\";\r\n\r\nexport default function Header() {\r\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\"));\r\n  function updateTheme() {\r\n    toggleTheme();\r\n    setTheme(localStorage.getItem(\"theme\"));\r\n  }\r\n  const renderRegionsList = () =>\r\n    getRegions().map((region) => {\r\n      return (\r\n        <Link to={contentRoot(`region/${region}`)} key={region}>\r\n          {\" \"}\r\n          <button className=\"btn\">{region}</button>{\" \"}\r\n        </Link>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"head-bar\">\r\n        <div className=\"container\">\r\n          <h1>Where in the world?</h1>\r\n          <div className=\"region-list\">{renderRegionsList()}</div>\r\n          <button id=\"switcher\" onClick={updateTheme}>\r\n            {theme} Mode\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { contentRoot } from \"../functions/general\";\r\n\r\nexport default function FlagCard(props) {\r\n  const { name, population, region, capital, alpha2Code } = props.flag;\r\n  return (\r\n    <div className=\"card\" key={name}>\r\n      <img\r\n        src={contentRoot(\r\n          `assets/images/flags/${alpha2Code.toLowerCase()}.webp`\r\n        )}\r\n        alt={`Flag of ${name}`}\r\n        className=\"card-img-top\"\r\n      />\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">\r\n          <strong style={{ fontSize: \"1.25rem\" }}>{name}</strong>\r\n        </h4>\r\n        <p className=\"card-text\">Population: {population.toLocaleString()}</p>\r\n        <p className=\"card-text\">Region: {region}</p>\r\n        <p className=\"card-text\">Capital: {capital}</p>\r\n        <p className=\"card-text\">\r\n          <Link to={contentRoot(`country/${alpha2Code.toLowerCase()}`)}>\r\n            {\" \"}\r\n            More Info\r\n          </Link>{\" \"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getFlags } from \"../functions/flagsapi\";\r\nimport FlagCard from \"../components/FlagCard\";\r\n\r\nexport default function Home() {\r\n  // state\r\n  const [flags, setFlags] = useState([]);\r\n\r\n  useEffect(loadFlags, []);\r\n\r\n  function loadFlags() {\r\n    getFlags().then(({ data }) => setFlags(data));\r\n  }\r\n\r\n  function renderFlagCard(flag) {\r\n    return <FlagCard flag={flag} />;\r\n  }\r\n\r\n  return (\r\n    <section id=\"wrapper-container\" className=\"container mt-5\">\r\n      <div id=\"flag-wrapper\">{flags.map(renderFlagCard)}</div>\r\n    </section>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst serverUrl = \"http://localhost:3003/flags\";\r\n\r\nexport function getFlags() {\r\n  return axios.get(serverUrl);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { contentRoot } from \"../functions/general\";\r\n\r\nexport default function BackBtn() {\r\n  return (\r\n    <Link to={contentRoot()}>\r\n      <button id=\"backBtn\" className=\"btn\">\r\n        Back\r\n      </button>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getNameAlphaFromBorder, contentRoot } from \"../functions/general\";\r\n\r\nexport default function BorderCountry(props) {\r\n  const { code } = props;\r\n  const { alpha2Code, name } = getNameAlphaFromBorder(code);\r\n  return (\r\n    <div className=\"country-border\">\r\n      <Link to={contentRoot(`Country/${alpha2Code}`)}>\r\n        <button className=\"btn border-btn\">{name}</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getCountryName,\r\n  getCountry,\r\n  getLanguageNamesStr,\r\n  getCurrencyStr\r\n} from \"../functions/general\";\r\nimport BackBtn from \"../components/BackBtn\";\r\nimport BorderCountry from \"../components/BorderCountry\";\r\n\r\nexport default function Country() {\r\n  let { id } = useParams();\r\n  const countryInfo = getCountry(id);\r\n  let {\r\n    nativeName,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies,\r\n    languages,\r\n    borders\r\n  } = countryInfo;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <BackBtn />\r\n      <div id=\"country\">\r\n        <div className=\"country-image\">\r\n          <img\r\n            src={`/assets/images/w702/${id.toLowerCase()}.webp`}\r\n            alt={`Flag of ${getCountryName(id)}`}\r\n          />\r\n        </div>\r\n        <div className=\"country-info\">\r\n          <h2>{getCountryName(id)}</h2>\r\n          <div className=\"country-list\">\r\n            <ul>\r\n              <li>\r\n                <strong>Native Name:</strong> {nativeName}\r\n              </li>\r\n              <li>\r\n                <strong>Population:</strong> {population.toLocaleString()}\r\n              </li>\r\n              <li>\r\n                <strong>Region:</strong> {region}\r\n              </li>\r\n              <li>\r\n                <strong>Sub Region:</strong> {subregion}\r\n              </li>\r\n              <li>\r\n                <strong>Capital:</strong> {capital}\r\n              </li>\r\n            </ul>\r\n            <ul>\r\n              <li>\r\n                <strong>Top Level Domain:</strong> {topLevelDomain}{\" \"}\r\n              </li>\r\n              <li>\r\n                <strong>Currencies:</strong> {getCurrencyStr(currencies)}{\" \"}\r\n              </li>\r\n              <li>\r\n                <strong>Languages:</strong> {getLanguageNamesStr(languages)}{\" \"}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <div className=\"country-borders\">\r\n              <div style={{ marginBottom: \"1em\" }}>Border Countries:</div>\r\n              {borders.map((border) => (\r\n                <BorderCountry code={border} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getCountries } from \"../functions/general\";\r\nimport BackBtn from \"../components/BackBtn\";\r\nimport FlagCard from \"../components/FlagCard\";\r\n\r\nexport default function Region() {\r\n  let { id } = useParams();\r\n  const countries = getCountries(id);\r\n\r\n  function renderFlagCard(flag) {\r\n    return <FlagCard flag={flag} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <BackBtn />\r\n      <section id=\"wrapper-container\" className=\"container\">\r\n        <div id=\"flag-wrapper\">{countries.map(renderFlagCard)} </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { checkTheme } from \"./functions/theme\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./pages/Home\";\r\nimport Country from \"./pages/Country\";\r\nimport \"./css/App.css\";\r\nimport Region from \"./pages/Region\";\r\n\r\nfunction App() {\r\n  checkTheme();\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Route exact path=\"/region/:id\" component={Region} />\r\n        <Route exact path=\"/country/:id\" component={Country} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}